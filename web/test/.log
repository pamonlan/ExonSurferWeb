2023-02-22 11:57:49,807 [25425] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-02-22 11:57:49,807 [25425] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-02-22 11:57:49,807 [25425] INFO     root:247: [JupyterRequire] Initializing comms.
2023-02-22 11:57:49,808 [25425] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-02-22 11:57:49,809 [25425] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-02-22 11:57:49,809 [25425] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-02-22 11:57:50,320 [25425] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-02-22 11:57:50,320 [25425] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-02-22 11:57:50,320 [25425] INFO     root:247: [JupyterRequire] Initializing comms.
2023-02-22 11:57:50,324 [25425] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-02-22 11:57:50,325 [25425] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-02-22 11:57:50,325 [25425] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-02-22 11:58:54,420 [25425] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2023-02-22 11:58:54,439 [25425] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2023-02-22 11:59:13,420 [25425] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-02-22 11:59:13,421 [25425] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2023-02-22 11:59:13,421 [25425] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2023-02-22 11:59:13,422 [25425] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-02-22 11:59:13,422 [25425] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-02-22 11:59:13,452 [25425] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /usr/lib/python3.8/typing.py
2023-02-22 11:59:13,457 [25425] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2023-02-22 11:59:22,476 [25425] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-02-22 11:59:22,476 [25425] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2023-02-22 11:59:22,477 [25425] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2023-02-22 11:59:22,477 [25425] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-02-22 11:59:22,477 [25425] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-02-22 12:00:53,084 [25425] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-02-22 12:00:53,084 [25425] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2023-02-22 12:00:53,084 [25425] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2023-02-22 12:00:53,085 [25425] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-02-22 12:00:53,085 [25425] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-02-22 12:00:58,014 [25425] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-02-22 12:00:58,015 [25425] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2023-02-22 12:00:58,015 [25425] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2023-02-22 12:00:58,016 [25425] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-02-22 12:00:58,016 [25425] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-02-22 12:00:58,150 [25425] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /usr/lib/python3.8/types.py
2023-02-22 12:00:58,153 [25425] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/types.pyi
2023-02-22 12:00:58,911 [25425] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /usr/lib/python3.8/abc.py
2023-02-22 12:00:58,912 [25425] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/abc.pyi
2023-02-22 12:04:14,525 [25425] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-02-22 12:04:14,525 [25425] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2023-02-22 12:04:14,525 [25425] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2023-02-22 12:04:14,526 [25425] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2023-02-22 12:04:14,526 [25425] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-02-22 12:05:06,865 [26752] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-02-22 12:05:06,865 [26752] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-02-22 12:05:06,865 [26752] INFO     root:247: [JupyterRequire] Initializing comms.
2023-02-22 12:05:06,866 [26752] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-02-22 12:05:06,866 [26752] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-02-22 12:05:06,867 [26752] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-02-22 12:05:46,151 [26752] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2023-02-22 12:05:46,152 [26752] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/django/__init__.py
2023-02-22 12:05:46,153 [26752] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/django-stubs/django-stubs/__init__.pyi
2023-02-22 12:05:46,158 [26752] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/django/db/__init__.py
2023-02-22 12:05:46,159 [26752] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/django-stubs/django-stubs/db/__init__.pyi
2023-02-22 12:05:46,203 [26752] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/django/db/models/__init__.py
2023-02-22 12:05:46,203 [26752] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/django-stubs/django-stubs/db/models/__init__.pyi
2023-02-22 12:05:46,215 [26752] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/django/db/models/base.py
2023-02-22 12:05:46,246 [26752] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2023-02-22 12:05:46,267 [26752] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /usr/lib/python3.8/typing.py
2023-02-22 12:05:46,271 [26752] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2023-02-22 12:05:46,302 [26752] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /usr/lib/python3.8/types.py
2023-02-22 12:05:46,304 [26752] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/types.pyi
2023-02-22 12:05:47,751 [26752] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-02-22 12:05:47,752 [26752] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2023-02-22 12:05:47,752 [26752] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2023-02-22 12:05:47,753 [26752] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-02-22 12:05:47,753 [26752] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-02-22 12:05:47,943 [26752] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-02-22 12:05:47,944 [26752] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2023-02-22 12:05:47,944 [26752] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2023-02-22 12:05:47,945 [26752] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-02-22 12:05:47,945 [26752] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-02-22 12:08:25,721 [26944] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-02-22 12:08:25,721 [26944] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-02-22 12:08:25,721 [26944] INFO     root:247: [JupyterRequire] Initializing comms.
2023-02-22 12:08:25,722 [26944] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-02-22 12:08:25,722 [26944] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-02-22 12:08:25,722 [26944] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 12:07:05,053 [14912] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 12:07:05,053 [14912] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 12:07:05,053 [14912] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 12:07:05,055 [14912] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 12:07:05,055 [14912] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 12:07:05,055 [14912] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 12:08:16,417 [14912] DEBUG    matplotlib:241: [JupyterRequire] (private) matplotlib data path: /home/q053pm/.local/lib/python3.8/site-packages/matplotlib/mpl-data
2023-03-12 12:08:16,417 [14912] DEBUG    matplotlib:241: [JupyterRequire] matplotlib data path: /home/q053pm/.local/lib/python3.8/site-packages/matplotlib/mpl-data
2023-03-12 12:08:16,419 [14912] DEBUG    matplotlib:241: [JupyterRequire] CONFIGDIR=/home/q053pm/.config/matplotlib
2023-03-12 12:08:16,420 [14912] DEBUG    matplotlib:1471: [JupyterRequire] matplotlib version 3.3.2
2023-03-12 12:08:16,420 [14912] DEBUG    matplotlib:1472: [JupyterRequire] interactive is False
2023-03-12 12:08:16,420 [14912] DEBUG    matplotlib:1473: [JupyterRequire] platform is linux
2023-03-12 12:08:16,420 [14912] DEBUG    matplotlib:1474: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_io', 'marshal', 'posix', '_frozen_importlib_external', '_thread', '_weakref', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'google', 'js', 'mpl_toolkits', 'sphinxcontrib', 'ruamel', 'apport_python_hook', 'sitecustomize', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '__future__', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', '_posixsubprocess', 'select', 'collections.abc', 'math', 'selectors', 'subprocess', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'atexit', 'copy', 'fnmatch', 'glob', 'token', 'tokenize', 'linecache', 'traceback', '_string', 'string', 'logging', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'pwd', 'grp', 'shutil', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'pprint', 'locale', 'gettext', 'argparse', 'ipython_genutils._version', 'ipython_genutils', '_bisect', 'bisect', '_sha512', '_random', 'random', 'ipython_genutils.encoding', 'platform', 'ipython_genutils.py3compat', 'ipython_genutils.path', 'traitlets.config.loader', 'textwrap', 'ipython_genutils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata__x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'termios', 'tty', 'pty', 'fcntl', 'resource', '_struct', 'struct', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'tempfile', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', '_sha3', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'ntpath', 'pathlib', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'typing.io', 'typing.re', 'typing', 'binascii', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'getpass', 'IPython.lib.security', 'IPython.lib', '_datetime', 'datetime', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', '_compat_pickle', '_pickle', 'pickle', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'html.entities', 'html', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'socket', '_ssl', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'array', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.file_io', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.grammar', 'parso', 'jedi.file_io', '_queue', 'queue', 'jedi._compatibility', 'jedi.parser_utils', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'jupyter_client._version', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_21', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.strtypes', 'numbers', '_decimal', 'decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'zmq.utils.jsonapi', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'jupyter_core.paths', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'ipython_genutils.importstring', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', 'logging.handlers', 'tornado.speedups', 'tornado.util', 'tornado.escape', '_curses', 'curses', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'six', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'netifaces', 'faulthandler', 'ipykernel.codeutil', 'ipykernel.pickleutil', 'ipykernel.serialize', 'ipykernel.datapub', 'IPython.core.completerlib', 'storemagic', 'socketserver', 'logging.config', 'syslog', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.formatter', 'systemd', 'systemd._journal', 'systemd._reader', 'systemd.id128', 'systemd.journal', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_require', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'matplotlib', 'gzip', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat._pep440', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_32', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2023-03-12 12:08:16,440 [14912] DEBUG    matplotlib:241: [JupyterRequire] CACHEDIR=/home/q053pm/.cache/matplotlib
2023-03-12 12:08:16,442 [14912] DEBUG    matplotlib.font_manager:1436: [JupyterRequire] Using fontManager instance from /home/q053pm/.cache/matplotlib/fontlist-v330.json
2023-03-12 12:08:16,509 [14912] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2023-03-12 12:08:16,511 [14912] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2023-03-12 12:08:16,752 [14912] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-03-12 12:08:29,614 [14912] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/pandas/__init__.py
2023-03-12 12:08:34,170 [14912] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-12 12:08:34,171 [14912] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2023-03-12 12:08:34,171 [14912] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2023-03-12 12:08:34,172 [14912] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-03-12 12:08:34,172 [14912] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-12 12:08:35,754 [14912] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-12 12:08:35,754 [14912] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 1
2023-03-12 12:08:35,754 [14912] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:1]
2023-03-12 12:08:35,754 [14912] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 1 (to 0 in part parser)
2023-03-12 12:08:35,754 [14912] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-12 12:08:49,816 [14912] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.8.
2023-03-12 12:08:49,816 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,816 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,816 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,816 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,816 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-03-12 12:08:49,816 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2023-03-12 12:08:49,816 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,816 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,816 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,816 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,816 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,817 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,818 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal 600 normal>) = 11.24
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,819 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal 900 normal>) = 11.525
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,820 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 2.25
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,821 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,822 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-12 12:08:49,823 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal 900 normal>) = 10.525
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 2.24
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,824 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal 800 normal>) = 11.43
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal 800 normal>) = 10.43
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal 500 normal>) = 11.145
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,825 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 200 normal>) = 10.24
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,826 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 200 normal>) = 11.24
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 100 normal>) = 10.335
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 100 normal>) = 11.335
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 2.535
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 12:08:49,827 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 3.25
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,828 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal 300 normal>) = 11.145
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 3.535
2023-03-12 12:08:49,829 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,830 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GLYPHICONS Halflings' (glyphicons-halflings-regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,831 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,832 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,832 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,832 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,832 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,832 [14912] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.8 to DejaVu Sans ('/home/q053pm/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 2.050000.
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=9.600000000000001.
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,836 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-12 12:08:49,837 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2023-03-12 12:08:49,838 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal 600 normal>) = 11.24
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal 900 normal>) = 11.525
2023-03-12 12:08:49,839 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 2.25
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,840 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,841 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,842 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal 900 normal>) = 10.525
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 2.24
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,843 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal 800 normal>) = 11.43
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,844 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal 800 normal>) = 10.43
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal 500 normal>) = 11.145
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,845 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 200 normal>) = 10.24
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,846 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 200 normal>) = 11.24
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 100 normal>) = 10.335
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 100 normal>) = 11.335
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 2.535
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,847 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 3.25
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,848 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal 300 normal>) = 11.145
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,849 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 3.535
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,850 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 12:08:49,851 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GLYPHICONS Halflings' (glyphicons-halflings-regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,852 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,853 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 12:08:49,853 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 12:08:49,853 [14912] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 12:08:49,853 [14912] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=9.600000000000001 to DejaVu Sans ('/home/q053pm/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 2.050000.
2023-03-12 12:09:47,845 [14912] DEBUG    parso.python.diff:282: [JupyterRequire] diff parser start
2023-03-12 12:09:47,845 [14912] DEBUG    parso.python.diff:293: [JupyterRequire] line_lengths old: 1; new: 2
2023-03-12 12:09:47,845 [14912] DEBUG    parso.python.diff:296: [JupyterRequire] -> code[replace] old[1:1] new[1:2]
2023-03-12 12:09:47,846 [14912] DEBUG    parso.python.diff:421: [JupyterRequire] parse_part from 1 to 2 (to 1 in part parser)
2023-03-12 12:09:47,846 [14912] DEBUG    parso.python.diff:339: [JupyterRequire] diff parser end
2023-03-12 12:09:47,874 [14912] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi
2023-03-12 12:09:48,116 [14912] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /usr/lib/python3.8/typing.py
2023-03-12 12:09:48,121 [14912] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi
2023-03-12 12:09:48,141 [14912] DEBUG    parso.cache:166: [JupyterRequire] pickle loaded: /home/q053pm/.local/lib/python3.8/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi
2023-03-12 12:10:40,548 [16006] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 12:10:40,549 [16006] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 12:10:40,549 [16006] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 12:10:40,550 [16006] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 12:10:40,550 [16006] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 12:10:40,550 [16006] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 20:44:36,545 [56423] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 20:44:36,545 [56423] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 20:44:36,545 [56423] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 20:44:36,546 [56423] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 20:44:36,547 [56423] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 20:44:36,547 [56423] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 20:44:37,284 [56423] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-12 20:44:37,285 [56423] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-12 20:44:37,285 [56423] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-12 20:44:37,289 [56423] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-12 20:44:37,290 [56423] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-12 20:44:37,290 [56423] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-12 20:44:44,940 [56423] DEBUG    matplotlib:241: [JupyterRequire] (private) matplotlib data path: /home/q053pm/.local/lib/python3.8/site-packages/matplotlib/mpl-data
2023-03-12 20:44:44,941 [56423] DEBUG    matplotlib:241: [JupyterRequire] matplotlib data path: /home/q053pm/.local/lib/python3.8/site-packages/matplotlib/mpl-data
2023-03-12 20:44:44,944 [56423] DEBUG    matplotlib:241: [JupyterRequire] CONFIGDIR=/home/q053pm/.config/matplotlib
2023-03-12 20:44:44,945 [56423] DEBUG    matplotlib:1471: [JupyterRequire] matplotlib version 3.3.2
2023-03-12 20:44:44,945 [56423] DEBUG    matplotlib:1472: [JupyterRequire] interactive is False
2023-03-12 20:44:44,946 [56423] DEBUG    matplotlib:1473: [JupyterRequire] platform is linux
2023-03-12 20:44:44,946 [56423] DEBUG    matplotlib:1474: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_io', 'marshal', 'posix', '_frozen_importlib_external', '_thread', '_weakref', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'google', 'js', 'mpl_toolkits', 'sphinxcontrib', 'ruamel', 'apport_python_hook', 'sitecustomize', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '__future__', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', '_posixsubprocess', 'select', 'collections.abc', 'math', 'selectors', 'subprocess', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'atexit', 'copy', 'fnmatch', 'glob', 'token', 'tokenize', 'linecache', 'traceback', '_string', 'string', 'logging', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'pwd', 'grp', 'shutil', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'pprint', 'locale', 'gettext', 'argparse', 'ipython_genutils._version', 'ipython_genutils', '_bisect', 'bisect', '_sha512', '_random', 'random', 'ipython_genutils.encoding', 'platform', 'ipython_genutils.py3compat', 'ipython_genutils.path', 'traitlets.config.loader', 'textwrap', 'ipython_genutils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata__x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'termios', 'tty', 'pty', 'fcntl', 'resource', '_struct', 'struct', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'tempfile', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', '_sha3', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'ntpath', 'pathlib', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'typing.io', 'typing.re', 'typing', 'binascii', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'getpass', 'IPython.lib.security', 'IPython.lib', '_datetime', 'datetime', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', '_compat_pickle', '_pickle', 'pickle', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'html.entities', 'html', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'socket', '_ssl', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'array', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.file_io', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.grammar', 'parso', 'jedi.file_io', '_queue', 'queue', 'jedi._compatibility', 'jedi.parser_utils', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'jupyter_client._version', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_21', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.strtypes', 'numbers', '_decimal', 'decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'zmq.utils.jsonapi', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'jupyter_core.paths', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'ipython_genutils.importstring', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', 'logging.handlers', 'tornado.speedups', 'tornado.util', 'tornado.escape', '_curses', 'curses', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'six', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'netifaces', 'faulthandler', 'ipykernel.codeutil', 'ipykernel.pickleutil', 'ipykernel.serialize', 'ipykernel.datapub', 'IPython.core.completerlib', 'storemagic', 'socketserver', 'logging.config', 'syslog', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.formatter', 'systemd', 'systemd._journal', 'systemd._reader', 'systemd.id128', 'systemd.journal', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'jupyter_require', 'matplotlib', 'gzip', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat._pep440', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_32', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2023-03-12 20:44:44,973 [56423] DEBUG    matplotlib:241: [JupyterRequire] CACHEDIR=/home/q053pm/.cache/matplotlib
2023-03-12 20:44:44,994 [56423] DEBUG    matplotlib.font_manager:1436: [JupyterRequire] Using fontManager instance from /home/q053pm/.cache/matplotlib/fontlist-v330.json
2023-03-12 20:44:45,046 [56423] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2023-03-12 20:44:45,048 [56423] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2023-03-12 20:44:45,205 [56423] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-03-12 20:44:46,801 [56423] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.8.
2023-03-12 20:44:46,801 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,801 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,801 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,801 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,801 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-03-12 20:44:46,801 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2023-03-12 20:44:46,801 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,801 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,802 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,803 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal 600 normal>) = 11.24
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 20:44:46,804 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal 900 normal>) = 11.525
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 2.25
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,805 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,806 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-12 20:44:46,807 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal 900 normal>) = 10.525
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 2.24
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,808 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal 800 normal>) = 11.43
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal 800 normal>) = 10.43
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal 500 normal>) = 11.145
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,809 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 200 normal>) = 10.24
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 200 normal>) = 11.24
2023-03-12 20:44:46,810 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 100 normal>) = 10.335
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 100 normal>) = 11.335
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 2.535
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,811 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 3.25
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal 300 normal>) = 11.145
2023-03-12 20:44:46,812 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 3.535
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,813 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,814 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GLYPHICONS Halflings' (glyphicons-halflings-regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,815 [56423] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.8 to DejaVu Sans ('/home/q053pm/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 2.050000.
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=9.600000000000001.
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,819 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,820 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal 600 normal>) = 11.24
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,821 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal 900 normal>) = 11.525
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 2.25
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-03-12 20:44:46,822 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,823 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,824 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-03-12 20:44:46,825 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal 900 normal>) = 10.525
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 2.24
2023-03-12 20:44:46,826 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,827 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal 800 normal>) = 11.43
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal 800 normal>) = 10.43
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal 500 normal>) = 11.145
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,828 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 200 normal>) = 10.24
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,829 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 200 normal>) = 11.24
2023-03-12 20:44:46,830 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 100 normal>) = 10.335
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 100 normal>) = 11.335
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 2.535
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,831 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 3.25
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,832 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal 300 normal>) = 11.145
2023-03-12 20:44:46,833 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 3.535
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,834 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-12 20:44:46,835 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,836 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GLYPHICONS Halflings' (glyphicons-halflings-regular.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-12 20:44:46,837 [56423] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=9.600000000000001 to DejaVu Sans ('/home/q053pm/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 2.050000.
2023-03-13 09:40:09,073 [7154] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-13 09:40:09,074 [7154] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-13 09:40:09,075 [7154] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-13 09:40:09,076 [7154] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-13 09:40:09,077 [7154] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-13 09:40:09,077 [7154] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-13 09:40:09,813 [7154] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2023-03-13 09:40:09,813 [7154] DEBUG    root:93: [JupyterRequire] Initializing comms.
2023-03-13 09:40:09,813 [7154] INFO     root:247: [JupyterRequire] Initializing comms.
2023-03-13 09:40:09,817 [7154] DEBUG    root:195: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2023-03-13 09:40:09,817 [7154] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2023-03-13 09:40:09,818 [7154] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2023-03-13 09:40:37,226 [7154] DEBUG    matplotlib:241: [JupyterRequire] (private) matplotlib data path: /home/q053pm/.local/lib/python3.8/site-packages/matplotlib/mpl-data
2023-03-13 09:40:37,226 [7154] DEBUG    matplotlib:241: [JupyterRequire] matplotlib data path: /home/q053pm/.local/lib/python3.8/site-packages/matplotlib/mpl-data
2023-03-13 09:40:37,228 [7154] DEBUG    matplotlib:241: [JupyterRequire] CONFIGDIR=/home/q053pm/.config/matplotlib
2023-03-13 09:40:37,229 [7154] DEBUG    matplotlib:1471: [JupyterRequire] matplotlib version 3.3.2
2023-03-13 09:40:37,229 [7154] DEBUG    matplotlib:1472: [JupyterRequire] interactive is False
2023-03-13 09:40:37,229 [7154] DEBUG    matplotlib:1473: [JupyterRequire] platform is linux
2023-03-13 09:40:37,229 [7154] DEBUG    matplotlib:1474: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_warnings', '_io', 'marshal', 'posix', '_frozen_importlib_external', '_thread', '_weakref', 'time', 'zipimport', '_codecs', 'codecs', 'encodings.aliases', 'encodings', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', '_abc', 'abc', 'io', '_stat', 'stat', '_collections_abc', 'genericpath', 'posixpath', 'os.path', 'os', '_sitebuiltins', '_locale', '_bootlocale', 'types', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib', 'importlib.machinery', 'importlib.abc', '_operator', 'operator', 'keyword', '_heapq', 'heapq', 'itertools', 'reprlib', '_collections', 'collections', '_functools', 'functools', 'contextlib', 'importlib.util', 'google', 'js', 'mpl_toolkits', 'sphinxcontrib', 'ruamel', 'apport_python_hook', 'sitecustomize', 'site', '_weakrefset', 'weakref', 'pkgutil', 'runpy', 'ipykernel._version', '__future__', 'enum', '_sre', 'sre_constants', 'sre_parse', 'sre_compile', 'copyreg', 're', '_json', 'json.scanner', 'json.decoder', 'json.encoder', 'json', 'errno', 'signal', 'threading', '_posixsubprocess', 'select', 'collections.abc', 'math', 'selectors', 'subprocess', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'atexit', 'copy', 'fnmatch', 'glob', 'token', 'tokenize', 'linecache', 'traceback', '_string', 'string', 'logging', 'zlib', '_compression', '_bz2', 'bz2', '_lzma', 'lzma', 'pwd', 'grp', 'shutil', '_ast', 'ast', '_opcode', 'opcode', 'dis', 'inspect', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets.utils.descriptions', 'traitlets.traitlets', 'traitlets.utils.decorators', 'traitlets._version', 'traitlets', 'pprint', 'locale', 'gettext', 'argparse', 'ipython_genutils._version', 'ipython_genutils', '_bisect', 'bisect', '_sha512', '_random', 'random', 'ipython_genutils.encoding', 'platform', 'ipython_genutils.py3compat', 'ipython_genutils.path', 'traitlets.config.loader', 'textwrap', 'ipython_genutils.text', 'traitlets.config.configurable', 'traitlets.config.application', 'traitlets.config', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata__x86_64-linux-gnu', 'pydoc', 'bdb', 'IPython.utils', 'IPython.utils.ipstruct', 'IPython.utils.coloransi', 'pygments', 'IPython.utils.colorable', 'IPython.utils.PyColorize', 'IPython.utils.encoding', 'IPython.utils.py3compat', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'cmd', 'codeop', 'code', 'pdb', 'IPython.core.debugger', 'IPython.core.display_trap', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'termios', 'tty', 'pty', 'fcntl', 'resource', '_struct', 'struct', 'ptyprocess.util', 'ptyprocess.ptyprocess', 'ptyprocess', 'pexpect.spawnbase', 'pexpect.pty_spawn', 'pexpect.run', 'pexpect', 'shlex', 'IPython.utils._process_common', 'IPython.utils._process_posix', 'IPython.utils.process', 'IPython.utils.decorators', 'IPython.utils.path', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.core.ultratb', 'IPython.utils._sysinfo', 'IPython.utils.sysinfo', 'IPython.core.crashhandler', 'tempfile', 'IPython.utils.importstring', 'IPython.paths', 'IPython.core.profiledir', 'IPython.core.application', 'IPython.terminal', '_hashlib', '_blake2', '_sha3', 'hashlib', 'IPython.core.compilerop', 'IPython.core.error', 'ntpath', 'pathlib', 'IPython.utils.text', 'IPython.core.magic_arguments', 'getopt', 'typing.io', 'typing.re', 'typing', 'binascii', 'mimetypes', 'IPython.core.display', 'IPython.core.page', 'getpass', 'IPython.lib.security', 'IPython.lib', '_datetime', 'datetime', 'IPython.lib.pretty', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers', 'pygments.filter', 'pygments.token', 'pygments.filters', 'pygments.regexopt', 'pygments.lexer', 'pygments.unistring', 'pygments.lexers.python', 'pygments.formatters._mapping', 'pygments.formatters', 'pygments.styles', 'pygments.formatter', 'pygments.formatters.html', 'IPython.core.oinspect', 'IPython.core.inputtransformer2', 'decorator', 'IPython.core.magic', '_compat_pickle', '_pickle', 'pickle', 'pickleshare', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.prefilter', 'IPython.core.alias', 'IPython.core.builtin_trap', 'backcall.backcall', 'backcall', 'IPython.core.events', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.utils.sentinel', 'IPython.core.formatters', '_sqlite3', 'sqlite3.dbapi2', 'sqlite3', 'IPython.core.history', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'html.entities', 'html', 'IPython.lib.display', 'IPython.display', 'IPython.utils.capture', 'IPython.utils.io', 'IPython.core.hooks', 'IPython.utils.strdispatch', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.core.interactiveshell', 'concurrent', 'concurrent.futures._base', 'concurrent.futures', '_socket', 'socket', '_ssl', 'base64', 'ssl', 'asyncio.constants', 'asyncio.format_helpers', 'asyncio.base_futures', 'asyncio.log', 'asyncio.coroutines', '_contextvars', 'contextvars', 'asyncio.exceptions', 'asyncio.base_tasks', '_asyncio', 'asyncio.events', 'asyncio.futures', 'asyncio.protocols', 'asyncio.transports', 'asyncio.sslproto', 'asyncio.locks', 'asyncio.tasks', 'asyncio.staggered', 'asyncio.trsock', 'asyncio.base_events', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.base_subprocess', 'asyncio.selector_events', 'asyncio.unix_events', 'asyncio', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.async_generator', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'wcwidth.wcwidth', 'wcwidth', 'prompt_toolkit.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.eventloop', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.clipboard', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters', 'prompt_toolkit.document', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.pygments', 'colorsys', 'prompt_toolkit.styles.style_transformation', 'prompt_toolkit.styles', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.base', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output', 'array', 'prompt_toolkit.output.vt100', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.ansi', 'xml', 'xml.dom.domreg', 'xml.dom', 'xml.dom.minicompat', 'xml.dom.NodeFilter', 'xml.dom.xmlbuilder', 'xml.dom.minidom', 'prompt_toolkit.formatted_text.html', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.formatted_text', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.completion', 'prompt_toolkit.history', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.search', 'prompt_toolkit.validation', 'prompt_toolkit.buffer', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.lexers', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.controls', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.layout', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.application', 'prompt_toolkit.application.dummy', 'prompt_toolkit.application', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.widgets', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts', 'prompt_toolkit', 'pygments.style', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'parso._compatibility', 'parso.utils', 'parso.tree', 'parso.python', 'parso.python.token', 'parso.python.tokenize', 'parso.pgen2.grammar_parser', 'parso.pgen2.generator', 'parso.pgen2', 'parso.parser', 'difflib', 'parso.python.prefix', 'parso.python.tree', 'parso.python.parser', 'parso.python.diff', 'gc', 'parso.file_io', 'parso.cache', 'parso.normalizer', 'parso.python.errors', 'parso.python.pep8', 'parso.grammar', 'parso', 'jedi.file_io', '_queue', 'queue', 'jedi._compatibility', 'jedi.parser_utils', 'colorama.ansi', '_ctypes', 'ctypes._endian', 'ctypes', 'colorama.win32', 'colorama.winterm', 'colorama.ansitowin32', 'colorama.initialise', 'colorama', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.inference.cache', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.inference.base_value', 'jedi.common', 'jedi.inference.sys_path', 'jedi.inference.recursion', 'jedi.inference.flow_analysis', 'jedi.inference.lazy_value', 'jedi.inference.docstrings', 'jedi.plugins', 'jedi.inference.names', 'jedi.inference.filters', 'jedi.inference.compiled.getattr_static', 'jedi.inference.compiled.access', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.compiled.value', 'jedi.inference.compiled', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.value.module', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.iterable', 'jedi.inference.arguments', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.function', 'jedi.inference.value.klass', 'jedi.inference.value.instance', 'jedi.inference.value', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.stub_value', 'jedi.inference.gradual.typeshed', 'jedi.inference.imports', 'jedi.inference.param', 'jedi.inference.gradual.annotation', 'jedi.inference.value.decorator', 'jedi.inference.syntax_tree', 'jedi.inference', 'jedi.inference.gradual.conversion', 'jedi.inference.compiled.mixed', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.keywords', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.classes', 'jedi.api.interpreter', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.completion', 'filecmp', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.inference.compiled.subprocess', 'jedi.api.environment', 'jedi.inference.references', 'jedi.api.project', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.api', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'jedi.plugins.registry', 'jedi', 'IPython.core.completer', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.debugger', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.interactiveshell', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'email', 'http', 'email.errors', 'email.quoprimime', 'email.base64mime', 'quopri', 'email.encoders', 'email.charset', 'email.header', 'calendar', 'email._parseaddr', 'email.utils', 'email._policybase', 'email.feedparser', 'email.parser', 'uu', 'email._encoded_words', 'email.iterators', 'email.message', 'http.client', 'urllib.response', 'urllib.error', 'urllib.request', 'IPython.core.magics.code', 'IPython.core.magics.config', 'IPython.core.magics.display', 'timeit', '_lsprof', 'profile', 'cProfile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.execution', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.pylabtools', 'IPython.core.magics.pylab', 'IPython.lib.backgroundjobs', 'IPython.core.magics.script', 'IPython.core.magics', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.terminal.ipapp', 'IPython.terminal.embed', 'IPython.utils.frame', 'IPython', 'jupyter_client._version', 'zmq.backend.select', 'cython_runtime', 'zmq.backend.cython.constants', '_cython_0_29_21', 'zmq.backend.cython.error', 'zmq.error', 'zmq.backend.cython.message', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.backend.cython', 'zmq.backend', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.constants', 'zmq.sugar.attrsettr', 'zmq.sugar.poll', 'zmq.utils.strtypes', 'numbers', '_decimal', 'decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.compat', 'simplejson._speedups', 'simplejson.scanner', 'simplejson.decoder', 'simplejson.encoder', 'simplejson', 'zmq.utils.jsonapi', 'zmq.sugar.socket', 'zmq.sugar.context', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'zmq.sugar', 'zmq', 'jupyter_client.localinterfaces', 'jupyter_core.version', 'jupyter_core', 'jupyter_core.paths', 'jupyter_client.connect', 'traitlets.log', 'jupyter_client.launcher', 'jupyter_client.channelsabc', 'jupyter_client.channels', 'jupyter_client.clientabc', 'jupyter_client.client', 'ipython_genutils.importstring', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.manager', 'jupyter_client.blocking.channels', 'jupyter_client.blocking.client', 'jupyter_client.blocking', 'zmq._future', 'zmq.asyncio', 'jupyter_client.asynchronous.channels', 'jupyter_client.asynchronous.client', 'jupyter_client.asynchronous', '_uuid', 'uuid', 'jupyter_client.multikernelmanager', 'jupyter_client', 'ipykernel.connect', 'ipykernel', 'tornado', 'logging.handlers', 'tornado.speedups', 'tornado.util', 'tornado.escape', '_curses', 'curses', 'tornado.log', 'tornado.concurrent', 'tornado.ioloop', 'tornado.platform', 'tornado.gen', 'tornado.platform.asyncio', 'zmq.eventloop.ioloop', 'zmq.eventloop', 'zmq.eventloop.zmqstream', 'imp', 'hmac', 'dateutil._version', 'dateutil', 'six', 'dateutil._common', 'dateutil.relativedelta', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.tz', 'dateutil.tz', 'dateutil.parser._parser', 'dateutil.parser.isoparser', 'dateutil.parser', '_strptime', 'jupyter_client.jsonutil', 'jupyter_client.adapter', 'jupyter_client.session', 'ipykernel.iostream', 'ipykernel.heartbeat', 'IPython.utils.tokenutil', 'tornado.locks', 'tornado.queues', 'ipykernel.jsonutil', 'ipykernel.kernelbase', 'ipykernel.comm.comm', 'ipykernel.comm.manager', 'ipykernel.comm', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.zmqshell', 'distutils', 'distutils.version', 'ipykernel.eventloops', 'ipykernel.ipkernel', 'ipykernel.parentpoller', 'ipykernel.kernelapp', 'netifaces', 'faulthandler', 'ipykernel.codeutil', 'ipykernel.pickleutil', 'ipykernel.serialize', 'ipykernel.datapub', 'IPython.core.completerlib', 'storemagic', 'socketserver', 'logging.config', 'syslog', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.formatter', 'systemd', 'systemd._journal', 'systemd._reader', 'systemd.id128', 'systemd.journal', 'daiquiri.handlers', 'daiquiri.output', 'daiquiri', 'jupyter_require.__about__', 'csscompressor', 'jupyter_require.core', 'jupyter_require.notebook', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jupyter_nbutils', 'jupyter_require.magic', 'jupyter_require', 'matplotlib', 'gzip', 'numpy._globals', 'numpy.__config__', 'numpy._distributor_init', 'numpy._version', 'numpy.version', 'numpy.core._multiarray_umath', 'numpy.compat._inspect', 'numpy.compat._pep440', 'numpy.compat.py3k', 'numpy.compat', 'numpy.core.overrides', 'numpy.core.multiarray', 'numpy.core.umath', 'numpy.core._string_helpers', 'numpy.core._dtype', 'numpy.core._type_aliases', 'numpy.core.numerictypes', 'numpy.core._exceptions', 'numpy.core._methods', 'numpy.core.fromnumeric', 'numpy.core.shape_base', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core._asarray', 'numpy.core.numeric', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core._machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._multiarray_tests', 'numpy.core._add_newdocs', 'numpy.core._add_newdocs_scalars', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.core', 'numpy.lib.mixins', 'numpy.lib.ufunclike', 'numpy.lib.type_check', 'numpy.lib.scimath', 'numpy.lib.stride_tricks', 'numpy.lib.twodim_base', 'numpy.linalg._umath_linalg', 'numpy.linalg.linalg', 'numpy.linalg', 'numpy.matrixlib.defmatrix', 'numpy.matrixlib', 'numpy.lib.histograms', 'numpy.lib.function_base', 'numpy.lib.index_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.npyio', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.lib', 'numpy.fft._pocketfft_internal', 'numpy.fft._pocketfft', 'numpy.fft.helper', 'numpy.fft', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.polynomial', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.polynomial', '_cython_0_29_32', 'numpy.random._common', 'secrets', 'numpy.random.bit_generator', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random.mtrand', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.random._pickle', 'numpy.random', 'numpy.ctypeslib', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.ma', 'numpy', 'matplotlib.cbook.deprecation', 'matplotlib.cbook', 'matplotlib._animation_data', 'matplotlib.animation', 'pyparsing', 'matplotlib.fontconfig_pattern', 'matplotlib.docstring', 'matplotlib._color_data', 'matplotlib.colors', 'cycler', 'matplotlib.rcsetup', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2023-03-13 09:40:37,248 [7154] DEBUG    matplotlib:241: [JupyterRequire] CACHEDIR=/home/q053pm/.cache/matplotlib
2023-03-13 09:40:37,251 [7154] DEBUG    matplotlib.font_manager:1436: [JupyterRequire] Using fontManager instance from /home/q053pm/.cache/matplotlib/fontlist-v330.json
2023-03-13 09:40:37,324 [7154] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2023-03-13 09:40:37,326 [7154] DEBUG    matplotlib.pyplot:289: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2023-03-13 09:40:37,607 [7154] INFO     numexpr.utils:159: [JupyterRequire] NumExpr defaulting to 8 threads.
2023-03-13 09:40:39,741 [7154] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.8.
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,742 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,743 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal 600 normal>) = 11.24
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-13 09:40:39,744 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal 900 normal>) = 11.525
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 2.25
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2023-03-13 09:40:39,745 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,746 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal 600 normal>) = 10.24
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal 900 normal>) = 10.525
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 2.24
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,747 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal 800 normal>) = 11.43
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal 800 normal>) = 10.43
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal 500 normal>) = 11.145
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,748 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 200 normal>) = 10.24
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 200 normal>) = 11.24
2023-03-13 09:40:39,749 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 100 normal>) = 10.335
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 100 normal>) = 11.335
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 2.535
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 3.25
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,750 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal 300 normal>) = 11.145
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,751 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 3.535
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,752 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GLYPHICONS Halflings' (glyphicons-halflings-regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,753 [7154] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=8.8 to DejaVu Sans ('/home/q053pm/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 2.050000.
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=9.600000000000001.
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,758 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Uroob' (Uroob-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOffice' (KacstOffice.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,759 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'ori1Uni' (utkal.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans8-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman6-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre DejaVu Math' (texgyredejavu-math.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal 600 normal>) = 11.24
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrowBold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-B.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Manjari' (Manjari-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Caps' (lmmonocaps10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-03-13 09:40:39,760 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nakula' (nakula.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal 900 normal>) = 11.525
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'mry_KacstQurn' (mry_KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans12-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Odia' (Lohit-Odia.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Abyssinica SIL' (AbyssinicaSIL-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 2.25
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Likhan' (LikhanNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Quotation' (lmsansquot8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Malayalam' (Lohit-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-L.ttf) normal normal 300 normal>) = 10.145
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-regular.otf) normal normal 600 normal>) = 10.24
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,761 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Pothana2000' (Pothana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Dunhill' (lmromandunh10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meera' (Meera-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Demi' (lmromandemi10-oblique.otf) oblique normal 600 normal>) = 11.24
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstScreen' (KacstScreen.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mitra Mono' (mitra.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Keraleeyam' (Keraleeyam-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Dyuthi' (Dyuthi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chilanka' (Chilanka-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-R.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,762 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal 600 normal>) = 10.24
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman9-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman5-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LKLUG' (lklug.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Tamil Classical' (Lohit-Tamil-Classical.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-LI.ttf) italic normal 300 normal>) = 11.145
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal 900 normal>) = 10.525
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Pagul' (Pagul.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-regular.otf) normal normal 600 condensed>) = 10.44
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Caps' (lmromancaps10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Thin.otf) normal normal 100 normal>) = 10.335
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 5.335
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 2.24
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Gujarati' (Lohit-Gujarati.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-Th.ttf) normal normal 250 normal>) = 10.1925
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,763 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AnjaliOldLipi' (AnjaliOldLipi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Slanted' (lmmonoslant10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstNaskh' (KacstNaskh.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman5-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal 800 normal>) = 11.43
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-M.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk Book' (PadaukBook-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstDigital' (KacstDigital.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gubbi' (Gubbi.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Saab' (Saab.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal 800 normal>) = 10.43
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Regular.ttc) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal 500 normal>) = 11.145
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-SemiBold.ttf) normal normal 600 normal>) = 10.24
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Serif CJK JP' (NotoSerifCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-MI.ttf) italic normal 500 normal>) = 11.145
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstBook' (KacstBook.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-BI.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Malayalam' (Samyak-Malayalam.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,764 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Unslanted' (lmromanunsl10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sahadeva' (sahadeva.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 200 normal>) = 10.24
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstFarsi' (KacstFarsi.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstArt' (KacstArt.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typist' (TlwgTypist-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Kannada' (Lohit-Kannada.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros' (texgyreheros-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chandas' (chandas1-2.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 4.335
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Karumbi' (Karumbi-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstPoster' (KacstPoster.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Devanagari' (Samyak-Devanagari.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes Math' (texgyretermes-math.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Devanagari' (Lohit-Devanagari.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rasa' (Rasa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstPen' (KacstPen.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Chorus' (texgyrechorus-mediumitalic.otf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 200 normal>) = 11.24
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Telugu' (Lohit-Telugu.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,765 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 100 normal>) = 10.335
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 100 normal>) = 11.335
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 2.535
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rachana' (Rachana-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Bengali' (Lohit-Bengali.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer OS System' (KhmerOSsys.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Purisa' (Purisa.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa-Bold.1.1' (padmaa-Bold.1.1.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Vemana2000' (vemana2000.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Gurmukhi' (Lohit-Gurmukhi.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-regular.otf) normal normal 400 condensed>) = 10.25
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Assamese' (Lohit-Assamese.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mukti Narrow' (MuktiNarrow.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sawasdee' (Sawasdee-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstLetter' (KacstLetter.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum' (texgyrebonum-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light' (lmmonolt10-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans9-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans17-oblique.otf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 3.25
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant17-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gargi' (Gargi.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola Math' (texgyreschola-math.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,766 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Laksaman' (Laksaman-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop Light' (lmmonoproplt10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Suruma' (Suruma.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman Slanted' (lmromanslant12-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstTitleL' (KacstTitleL.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Mono' (TlwgMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sarai' (Sarai.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-R.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lohit Tamil' (Lohit-Tamil.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans Demi Cond' (lmsansdemicond10-oblique.otf) oblique normal 600 condensed>) = 11.44
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal 300 normal>) = 11.145
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Bonum Math' (texgyrebonum-math.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typewriter' (TlwgTypewriter-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noto Sans CJK JP' (NotoSansCJK-Bold.ttc) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Cursor' (texgyrecursor-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 4.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstTitle' (KacstTitle.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Padauk' (Padauk-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella Math' (texgyrepagella-math.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,767 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstDecorative' (KacstDecorative.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 3.535
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono10-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Math' (latinmodern-math.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'aakar' (aakar-medium.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono' (lmmono9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Mono' (UbuntuMono-B.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Gujarati' (Samyak-Gujarati.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Pagella' (texgyrepagella-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yrsa' (Yrsa-Light.ttf) normal normal 300 normal>) = 10.145
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Phetsarath OT' (Phetsarath_OT.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Heros Cn' (texgyreheroscn-bolditalic.otf) italic normal 700 normal>) = 11.335
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans10-boldoblique.otf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samyak Tamil' (Samyak-Tamil.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstOne' (KacstOne-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 5.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gayathri' (Gayathri-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waree' (Waree-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Samanata' (samanata.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman6-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kalapi' (Kalapi.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Loma' (Loma-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Rekha' (Rekha.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,768 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tlwg Typo' (TlwgTypo.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-LightOblique.ttf) oblique normal 300 normal>) = 11.145
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Adventor' (texgyreadventor-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Jamrul' (JamrulNormal.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kalimati' (kalimati.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'padmaa' (padmaa-Medium-0.5.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu Condensed' (Ubuntu-C.ttf) normal normal 400 condensed>) = 10.25
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman10-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Light Cond' (lmmonoltcond10-oblique.otf) oblique normal 400 condensed>) = 11.25
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Norasi' (Norasi-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ani' (ani.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ubuntu' (Ubuntu-RI.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans8-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Navilu' (Navilu.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KacstQurn' (KacstQurn.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Termes' (texgyretermes-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal 500 normal>) = 10.145
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kinnari' (Kinnari-Italic.ttf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Sans' (lmsans9-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Umpush' (Umpush-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer OS' (KhmerOS.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'RaghuMalayalamSans' (RaghuMalayalamSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeX Gyre Schola' (texgyreschola-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman7-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GLYPHICONS Halflings' (glyphicons-halflings-regular.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tibetan Machine Uni' (TibetanMachineUni.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Garuda' (Garuda.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Mono Prop' (lmmonoprop10-regular.otf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Latin Modern Roman' (lmroman12-italic.otf) italic normal 400 normal>) = 11.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-03-13 09:40:39,769 [7154] DEBUG    matplotlib.font_manager:1366: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=9.600000000000001 to DejaVu Sans ('/home/q053pm/.local/lib/python3.8/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 2.050000.
